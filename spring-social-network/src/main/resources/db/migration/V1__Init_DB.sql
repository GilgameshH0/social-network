drop table if exists role;
drop table if exists user;
drop table if exists user_role;
drop table if exists message;
drop table if exists friend;
drop table if exists community;
drop table if exists community_subscribers;
drop table if exists user_post;
drop table if exists group_post;
create table role (id bigint not null auto_increment, name varchar(255), primary key (id));
create table user (id bigint not null auto_increment, username varchar(255), password varchar(255), email varchar(255), gender varchar(255) not null, name varchar(255), surname varchar(255), patronymic varchar(255), birthdate date, country varchar(255), primary key (id));
create table user_roles (user_id bigint not null, roles_id bigint not null, primary key (user_id, roles_id));
create table message (id bigint not null auto_increment, text varchar(255), from_user_id bigint, to_user_id bigint, primary key (id));
create table friend (first_user_id bigint not null, second_user_id bigint not null, status varchar(255), primary key (first_user_id, second_user_id));
create table community (id bigint not null auto_increment, name varchar(255), owner_id bigint, primary key (id));
create table community_subscribers (group_id bigint not null, subscribers_id bigint not null);
create table user_post (id bigint not null auto_increment, text varchar(255), owner_id bigint, primary key (id));
create table group_post (id bigint not null auto_increment, text varchar(255), owner_id bigint, primary key (id));
alter table user add constraint user_fk0 unique (username);
alter table user add constraint user_fk1 unique (email);
alter table user_roles add constraint user_role_fk0 foreign key (roles_id) references role (id);
alter table user_roles add constraint user_role_fk1 foreign key (user_id) references user (id);
alter table message add constraint message_fk0 foreign key (from_user_id) references user (id);
alter table message add constraint message_fk1 foreign key (to_user_id) references user (id);
alter table friend add constraint friend_fk0 foreign key (first_user_id) references user (id);
alter table friend add constraint friend_fk1 foreign key (second_user_id) references user (id);
alter table community add constraint community_fk0 foreign key (owner_id) references user (id);
alter table community_subscribers add constraint community_subscribers_fk0 foreign key (subscribers_id) references user(id);
alter table community_subscribers add constraint community_subscribers_fk1 foreign key (group_id) references community(id);
alter table user_post add constraint user_post_fk0 foreign key (owner_id) references user (id);
alter table group_post add constraint group_post_fk0 foreign key (owner_id) references community (id);
create index role_index ON role(id, name);
create index user_index ON user(id, username, country);
create index user_roles_index ON user_roles(user_id, roles_id);
create index message_index ON message(id, from_user_id, to_user_id);
create index friend_index ON friend(first_user_id, second_user_id, status);
create index community_index ON community(id, owner_id);
create index community_subscribers_index ON community_subscribers(group_id, subscribers_id);
create index user_post_index ON user_post(id, owner_id);
create index group_post_index ON group_post(id, owner_id);